function AnimationMap() {
  $(".map .list-info").each(function () {
    let e,
      s,
      r = $(this).children();
    (i = 0),
      r[i].classList.add("show"),
      $("#" + r[i].id + "-shadow").addClass("show"),
      setInterval(function () {
        i <= r.length &&
          ((e = r[i++]),
            e.classList.remove("show"),
            $("#" + e.id + "-shadow").removeClass("show"),
            (s = r[(i %= r.length)]),
            s.classList.add("show"),
            $("#" + s.id + "-shadow").addClass("show"));
      }, 3000);
  });
}
//4e3
// function AnimationMap() {
//   $(".map .list-info").each(function () {
//     let r = $(this).children(); // Danh sách các mục con
//     let i = 0; // Chỉ số mục hiện tại

//     // Kích hoạt phần tử đầu tiên
//     r[i].classList.add("show");
//     $("#" + r[i].id + "-shadow").addClass("show");
//     $("#" + r[i].id + "-shadow").removeClass("stopped"); // Bắt đầu animation

//     // Lặp qua danh sách
//     setInterval(function () {
//       if (i < r.length) {
//         // Lấy phần tử hiện tại và bỏ hiệu ứng
//         let current = r[i];
//         current.classList.remove("show");
//         $("#" + current.id + "-shadow").removeClass("show");
//         $("#" + current.id + "-shadow").addClass("stopped"); // Dừng animation

//         // Chuyển sang phần tử tiếp theo
//         i = (i + 1) % r.length;
//         let next = r[i];
//         next.classList.add("show");
//         $("#" + next.id + "-shadow").addClass("show");
//         $("#" + next.id + "-shadow").removeClass("stopped"); // Bắt đầu animation
//       }
//     }, 4000); // Thời gian lặp (4 giây)
//   });
// }


// // Hàm đổi màu shadow
// function changeShadowColor(shadowId, color) {
//   $("#" + shadowId + "-shadow").attr("fill", color); // Đổi thuộc tính `fill` của shadow
// }

// function AnimationMap() {
//   $(".map .list-info").each(function () {
//     let r = $(this).children();
//     if (r.length > 1) {

//       // r[0].classList.add("show");
//       // $("#" + r[0].id + "-shadow").addClass("show");
//       // r[1].classList.add("show");
//       // $("#" + r[1].id + "-shadow").addClass("show");
//       r[2].classList.add("show");
//       $("#" + r[2].id + "-shadow").addClass("show");
//     }
//   });
// }


$(window).on("load", function () {
  if (!("IntersectionObserver" in window)) {
    var e = document.createElement("script");
    (e.src =
      "https://raw.githubusercontent.com/w3c/IntersectionObserver/master/polyfill/intersection-observer.js"),
      document.getElementsByTagName("body")[0].appendChild(e);
  }
  lozad().observe();
  $(".scroll__wrapper").each(function () {
    let e = $(this);
    e.height() >= 550 ? e.addClass("scrollable") : e.removeClass("scrollable");
  });
  $(".count-number").each(function () {
    $(this)
      .prop("Counter", 0)
      .animate(
        { Counter: $(this).text() },
        {
          duration: 6e3,
          easing: "swing",
          step: function (e) {
            $(this).text(
              Math.ceil(e)
                .toString()
                .replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1.")
            );
          },
        }
      );
  });
  AnimationMap();
  Load3dCarousel();



  $(".feedback__slider").length && new Swiper(".feedback__slider", {
    slidesPerView: 1,
    spaceBetween: 24,
    speed: 350,
    loop: true,
    centeredSlides: true,
    grabCursor: true,
    autoplay: { delay: 1500, disableOnInteraction: !1 },
    pagination: {
      el: ".feedback__pagination",
      clickable: true
    },
    navigation: {
      nextEl: ".feedback__navigation .next",
      prevEl: ".feedback__navigation .previous"
    },
    breakpoints: {
      540: { slidesPerView: 1.5 },
      768: { slidesPerView: 2.25, slidesPerGroup: 2 },
      992: { slidesPerView: 3, slidesPerGroup: 3 },
      1200: { slidesPerView: 3.5, slidesPerGroup: 3 },
      1400: { slidesPerView: 4, slidesPerGroup: 4 },
      1600: { slidesPerView: 4.5, slidesPerGroup: 4 },
      1700: { slidesPerView: 5, slidesPerGroup: 5 }
    },
    on: {
      init: function () {
        initReadMore();
      },
      slideChange: function () {
        initReadMore();
      }
    }
  });

  $(".feedback__slider").length &&
    new Swiper(".feedback__slider", {
      slidesPerView: 1,
      spaceBetween: 24,
      speed: 350,
      loop: !0,
      centeredSlides: !0,
      grabCursor: !0,
      autoplay: false,
      //   autoplay: { delay: 1500, disableOnInteraction: !1 },
      pagination: { el: ".feedback__pagination", clickable: !0 },
      navigation: {
        nextEl: ".feedback__navigation .next",
        prevEl: ".feedback__navigation .previous",
      },
      breakpoints: {
        540: { slidesPerView: 1.5 },
        768: { slidesPerView: 2.25, slidesPerGroup: 2 },
        992: { slidesPerView: 3, slidesPerGroup: 3 },
        1200: { slidesPerView: 3.5, slidesPerGroup: 3 },
        1400: { slidesPerView: 4, slidesPerGroup: 4 },
        1600: { slidesPerView: 4.5, slidesPerGroup: 4 },
        1700: { slidesPerView: 5, slidesPerGroup: 5 },
      },
    });
  $(".news__slider").length &&
    new Swiper(".news__slider", {
      slidesPerView: 1,
      spaceBetween: 24,
      speed: 350,
      autoPlay: false,
      // autoplay: { delay: 1500, disableOnInteraction: !1 },
      pagination: { el: ".news__pagination", clickable: !0 },
      navigation: {
        nextEl: ".news__navigation .next",
        prevEl: ".news__navigation .previous",
      },
      breakpoints: {
        540: { slidesPerView: 1.5 },
        768: { slidesPerView: 2.25, slidesPerGroup: 2 },
        992: { slidesPerView: 3, slidesPerGroup: 3 },
      },
    });
  if ($(".slider-logo__v1")) {
    new Swiper(".slider-logo__v1", {
      slidesPerView: 2,
      loop: !0,
      spaceBetween: 32,
      grabCursor: !1,
      speed: 3e3,
      preventInteractionOnTransition: !0,
      autoplay: {
        delay: 1,
        reverseDirection: !1,
        disableOnInteraction: !1,
        waitForTransition: !0,
      },
      breakpoints: {
        540: { slidesPerView: 3 },
        768: { slidesPerView: 4 },
        992: { slidesPerView: 6 },
      },
    });
  }
  if ($(".slider-logo__v2")) {
    if ($(".slider-logo__v2")) {
      new Swiper(".slider-logo__v2", {
        slidesPerView: 2,
        loop: !0,
        spaceBetween: 32,
        grabCursor: !1,
        speed: 3e3,
        loopedSlides: 1,
        loop:true,
        preventInteractionOnTransition: !0,
        autoplay: { delay: 1, reverseDirection: !0, disableOnInteraction: !1 ,waitForTransition: !0,},
        breakpoints: {
          540: { slidesPerView: 3 },
          768: { slidesPerView: 4 },
          992: { slidesPerView: 6 },
        },
      });
    }
    
  }
  if ($(".slider-gallery")) {
    new Swiper(".slider-gallery", {
      slidesPerView: 2,
      loop: !0,
      spaceBetween: 32,
      grabCursor: !1,
      speed: 5000,
      loopedSlides: 1,
      loop:true,
      preventInteractionOnTransition: !0,
      autoplay: { delay: 1, reverseDirection: !0, disableOnInteraction: !1 ,waitForTransition: !0,},
      
      breakpoints: {
        540: { slidesPerView: 3 },
        992: { slidesPerView: 4 },
      },
    });
  }
  $(".projects__slider").length &&
    new Swiper(".projects__slider", {
      slidesPerView: 1.15,
      slidesPerGroup: 1,
      spaceBetween: -20,
      loop: !0,
      centeredSlides: !0,
      speed: 550,
      autoplay: { delay: 3500, disableOnInteraction: !1 },
      pagination: { el: ".projects__pagination", clickable: !0 },
      navigation: {
        nextEl: ".projects__navigation .next",
        prevEl: ".projects__navigation .previous",
      },
      breakpoints: { 992: { spaceBetween: -50 } },
    });
  $(".slider-award").length &&
    new Swiper(".slider-award", {
      slidesPerView: 1,
      slidesPerGroup: 1,
      spaceBetween: -20,
      loop: !0,
      grabCursor: !0,
      centeredSlides: !0,
      speed: 550,
      pagination: { el: ".slider-award-pagination", clickable: !0 },
    });
  if ($(".slider-history").length) {
    let thumb = new Swiper(".slider-history-thumb", {
      spaceBetween: 32,
      slidesPerView: "auto",
      touchRatio: 0.2,
      speed: 500,
      watchSlideProgress: true,
      slideToClickedSlide: true,
      breakpoints: {
        992: {
          spaceBetween: 60,
        },
        1400: {
          spaceBetween: 105,
        },
        1600: {
          spaceBetween: 120,
        },
      },
    });
    let main = new Swiper(".slider-history", {
      spaceBetween: 10,
      speed: 500,
      loop: true,
      thumbs: {
        swiper: thumb,
      },
      navigation: {
        nextEl: ".slider-thumb-control .swiper-button.next",
        prevEl: ".slider-thumb-control .swiper-button.prev",
      },
      autoplay: {
        delay: 10000, 
        disableOnInteraction: false, 
    },
    });
  }
  $(".slider-history .desc").each(function () {
    let e = $(this);
    let max;
    if ($(window).width() > 992) {
      max = 350;
    } else {
      max = 250;
    }
    e.height() > max ? e.addClass("max-ellips") : e.removeClass("max-ellips");
  });
});
function Load3dCarousel() {
  if ($(".slider-features__sub").length) {
    var showcase = $(".slider-features__sub"); //Get Container of 3d Carousel
    let info = $("#info"); // Get Container Popup Text
    let x = showcase.width() / 2; // Get Half With of Container
    showcase.Cloud9Carousel({
      xOrigin: x, // Make wide of circle
      yOrigin: 95, //Drop point in front of calculate with Half width of Container - 5px
      xRadius: showcase.width() / 2 - 32, // Get center of Container
      yRadius: 100, // Get center of Container
      // farScale: 1, // Scale far from active
      fps: 144, // Rate of per frames

      itemClass: "thumb", // item need active
      buttonLeft: $(".slider-features-control .prev"), // Control
      buttonRight: $(".slider-features-control .next"), // Control
      autoPlay: 1, // Enable autoplay, 0 will disabled
      autoPlayDelay: 3000, //Time to Delay, 1000 = 1s
      speed: 3, // Speed to spin, 1-3: slow, 4-7: medium,8-10: fast. Default is 8-10
      bringToFront: true, // Make item active to in front of carousel
      onRendered: function () {
        var item = showcase.data("carousel").nearestItem(); // Get item active
        showcase.find(".thumb").removeClass("active"); //Remove class if not item
        item.element.classList.add("active"); // Add Class to make animation
        var c = Math.cos(
          (showcase.data("carousel").floatIndex() % 1) * 2 * Math.PI
        ); // Math opacity text when spin
        info.css("opacity", 0.5 + 0.5 * c); // Show animation text
        if (item.element.querySelector(".info")) {
          $("#info").html(item.element.querySelector(".info").innerHTML);
        } // Put text show
      },
    });
  }
}

function History() { }



$(".faq-links").each(function () {
  let e = $(this),
    i = e.data("toggle");
  e.on("click", function (n) {
    e
      .parents(".block-faq")
      .find(".faq-links")
      .not(e)
      .removeClass("open-toggle"),
      e.toggleClass("open-toggle"),
      e.parents(".block-faq").find(".faq-collapse").not(i).slideUp(),
      e.parent().find(i).slideToggle(),
      n.preventDefault();
  });
})



function initReadMore() {
  const descElements = document.querySelectorAll('.desc');

  descElements.forEach(desc => {
    const content = desc.querySelector('.desc-content');
    const existingButton = desc.querySelector('.btn-read-more');
    if (!content) return;


    const contentHeight = content.scrollHeight;


    if (contentHeight > 120) {
      desc.classList.add('truncated');


      if (!existingButton) {
        const button = document.createElement('button');
        button.className = 'btn-read-more container';
        button.textContent = 'Xem thêm';
        desc.appendChild(button);

        button.addEventListener('click', function () {
          desc.classList.toggle('expanded');
          button.textContent = desc.classList.contains('expanded') ? 'Thu gọn' : 'Xem thêm';
        });
      }
    } else {

      if (existingButton) {
        existingButton.remove();
      }
      desc.classList.remove('truncated', 'expanded');
    }
  });
}